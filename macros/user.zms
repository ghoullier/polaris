//service authentication = simple(SIMPLE_AUTHENTIFICATION_ID);
//service group = groups(GROUP_ID);

/**
 * Register user
 */
macroscript registerUser {
	var user = simple(SIMPLE_AUTHENTIFICATION_ID).createUser({
		login: __parameters.login,
		password: __parameters.password,
		email: __parameters.email,
		firstName: __parameters.firstName,
		lastName: __parameters.lastName
	});
} return {
	primaryKey: user.zetapushKey
} on channel "registered"

/**
 * Création d'un utilisateury
 */
macroscript registerGrantedUser {
	var user = simple(SIMPLE_AUTHENTIFICATION_ID).createUser({
		login: __parameters.login,
		password: __parameters.password,
		email: __parameters.email,
		firstName: __parameters.firstName,
		lastName: __parameters.lastName
	});
	// Add admin grant to acces on user create gda
	var group = sudo user.zetapushKey createGroupAccessToMyGda();
} return {
	user: user,
	group: group
} on channel "registered"

/**
 * Création d'un groupe
 */
macroscript createGroupAccessToMyGda {
	// Création du groupe (pour chaque nouveau user). Cette ligne ne fonctionne que si la macro courante est exécutée en sudo
	var group = groups(GROUP_ID).createGroup({
		group: GROUP_ACCESS_TO_MY_GDA,
		groupName: "Group Access To My Gda"
	});

	// Ajout de l'utilisateur courrant au groupe des persons autorisés à modifier la gda
	groups(GROUP_ID).addMe({
		group: GROUP_ACCESS_TO_MY_GDA
	});

	// Ajout de l'utilisateur admin au groupe des persons autorisés à modifier la gda
	groups(GROUP_ID).addUser({
		user: ADMIN_ID,
		group: GROUP_ACCESS_TO_MY_GDA
	});

	// Pour la syntaxe de la resource, voir la doc. même chose ici : le owner implicite est le user "sudoisé"
	// deploymentId:owner:preciseResource.
	var ressourceId = GDA_ID + ":" + __userKey + ":User";
	groups(GROUP_ID).grant({
		group: GROUP_ACCESS_TO_MY_GDA,
		resource: ressourceId,
		action : "*"
	});
} return {
	group: group
}
